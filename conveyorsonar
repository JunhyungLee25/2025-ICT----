#define ENA 9     // 모터 속도 제어 (PWM 핀)
#define IN1 7     // 모터 방향 제어 1
#define IN2 8     // 모터 방향 제어 2

#define TRIG 10   // 초음파 센서 Trig 핀
#define ECHO 11   // 초음파 센서 Echo 핀

long duration;
int distance;
unsigned long lastDetectionTime;
const unsigned long timeout = 5000;  // 5초 타임아웃 (밀리초 단위)

void setup() {
    pinMode(ENA, OUTPUT);
    pinMode(IN1, OUTPUT);
    pinMode(IN2, OUTPUT);
    
    pinMode(TRIG, OUTPUT);
    pinMode(ECHO, INPUT);

    Serial.begin(9600);  // 시리얼 모니터 출력
    lastDetectionTime = millis();  // 시작 시간 설정
}

void loop() {
    distance = getDistance(); // 초음파 센서를 통한 거리 측정
    Serial.print("Distance: ");
    Serial.print(distance);
    Serial.println(" cm");

    if (distance > 0 && distance < 100) { // 장애물이 100cm 이내에 있으면
        lastDetectionTime = millis(); // 마지막 감지 시간 업데이트
        motorRun(); // 모터 계속 구동
    }

    // 마지막 감지 이후 5초가 지났다면 모터 정지
    if (millis() - lastDetectionTime > timeout) {
        motorStop();
    }

    delay(100); // 센서 업데이트 주기
}

// 🚀 **초음파 센서를 통해 거리 측정**
int getDistance() {
    digitalWrite(TRIG, LOW);
    delayMicroseconds(2);
    digitalWrite(TRIG, HIGH);
    delayMicroseconds(10);
    digitalWrite(TRIG, LOW);

    duration = pulseIn(ECHO, HIGH);
    return duration * 0.034 / 2;  // cm 단위 거리 반환
}

// 🏎 **DC 모터 구동 (앞으로 이동)**
void motorRun() {
    digitalWrite(IN1, HIGH);
    digitalWrite(IN2, LOW);
    analogWrite(ENA, 150);  // 속도 조절 (0~255)
}

// 🛑 **DC 모터 정지**
void motorStop() {
    digitalWrite(IN1, LOW);
    digitalWrite(IN2, LOW);
    analogWrite(ENA, 0);
}
